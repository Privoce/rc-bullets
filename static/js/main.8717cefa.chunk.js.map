{"version":3,"sources":["containers/Screen.js","helper.js","containers/Dashboard.js","App.js","Global.style.js","index.js"],"names":["ScreenPage","screen","useState","paused","setPaused","visible","setVisible","style","position","left","top","IconButton","onClick","clear","RotateLeft","color","hide","show","VisibilityOff","Visibility","resume","pause","PlayCircleFilledWhite","PauseCircleFilled","height","className","heads","title","path","themes","yingbai","bgColor","chabai","weilan","zise","fense","yanzhi","tong","yanhong","getRandomTheme","keys","Object","Math","floor","random","length","animateFuns","linear","ease","getRandomAniFun","getRandomHead","useStyles","makeStyles","theme","root","padding","spacing","marginBottom","StyledWrapper","styled","section","StyledAvator","img","Dashboard","currScreen","setCurrScreen","bullet","setBullet","setTheme","animateFun","setAnimateFun","duration","setDuration","setImg","paramsOpen","setParamsOpen","popperAnchorEl","useRef","classes","useEffect","tmp","BulletScreen","Popper","anchorEl","current","open","placement","Paper","Grid","direction","container","item","InputLabel","shrink","id","Select","labelId","value","onChange","target","console","log","MenuItem","map","head","key","src","alt","width","fontSize","background","TextField","label","type","alignItems","justify","ref","prev","Settings","xs","fullWidth","multiline","placeholder","variant","Button","currAnimateKey","currThemeKey","currImg","obj","animateTimeFun","txt","ts","Date","getTime","newImg","opts","push","msg","newV","JSON","stringify","localStorage","setItem","App","prefersDarkMode","useMediaQuery","React","useMemo","createMuiTheme","palette","primary","main","secondary","error","ThemeProvider","basename","process","exact","component","DashboardPage","DemoPage","GlobalStyle","createGlobalStyle","reset","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8717cefa.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport {\n  RotateLeft,\n  PlayCircleFilledWhite,\n  PauseCircleFilled,\n  Visibility,\n  VisibilityOff\n} from '@material-ui/icons';\n\nexport default function ScreenPage({ screen }) {\n  const [paused, setPaused] = useState(false);\n  const [visible, setVisible] = useState(true);\n\n  const handleAnimateState = () => {\n    if (paused) {\n      screen.resume();\n    } else {\n      screen.pause();\n    }\n    setPaused(!paused);\n  };\n  const handleClear = () => {\n    screen.clear();\n  };\n  const handleVisible = () => {\n    if (visible) {\n      screen.hide();\n    } else {\n      screen.show();\n    }\n    setVisible(!visible);\n  };\n\n  return (\n    <>\n      <aside style={{ position: 'fixed', left: 0, top: 0 }}>\n        <IconButton onClick={handleClear}>\n          <RotateLeft color=\"error\"></RotateLeft>\n        </IconButton>\n        <IconButton onClick={handleVisible}>\n          {visible ? <VisibilityOff color=\"secondary\" /> : <Visibility color=\"secondary\" />}\n        </IconButton>\n        <IconButton onClick={handleAnimateState}>\n          {paused ? (\n            <PlayCircleFilledWhite color=\"secondary\" />\n          ) : (\n            <PauseCircleFilled color=\"secondary\" />\n          )}\n        </IconButton>\n      </aside>\n      <section style={{ height: '100vh' }} className=\"screen\"></section>\n    </>\n  );\n}\n","const heads = [\n  {\n    title: '奥特曼',\n    path: 'assets/img/heads/aotuman.jpg'\n  },\n  {\n    title: '熊孩子',\n    path: 'assets/img/heads/bear.jpg'\n  },\n  {\n    title: '卡通女孩',\n    path: 'assets/img/heads/carton.girl.jpg'\n  },\n  {\n    title: '卡通男孩',\n    path: 'assets/img/heads/carton.jpg'\n  },\n  {\n    title: 'QQ头像',\n    path: 'assets/img/heads/carton2.jpg'\n  },\n  {\n    title: '猫咪',\n    path: 'assets/img/heads/cat.jpg'\n  },\n  {\n    title: '小老弟',\n    path: 'assets/img/heads/dog.jpg'\n  },\n  {\n    title: '可爱',\n    path: 'assets/img/heads/girl.jpg'\n  },\n  {\n    title: '蜡笔小新',\n    path: 'assets/img/heads/xiaoxin.jpg'\n  },\n  {\n    title: '动图',\n    path: 'assets/img/heads/xiongmao.jpg'\n  },\n  {\n    title: '美女',\n    path: 'assets/img/heads/nv.jpg'\n  },\n  {\n    title: '气质美女',\n    path: 'assets/img/heads/nv2.jpg'\n  },\n  {\n    title: '动图',\n    path: 'assets/img/heads/xiongmao.gif'\n  }\n];\n\nconst themes = {\n  yingbai: {\n    title: '莹白',\n    color: 'rgb(22,22,2)',\n    bgColor: 'rgba(227,249,253,.8)'\n  },\n  chabai: {\n    title: '茶白',\n    color: 'rgb(22,22,2)',\n    bgColor: 'rgba(243,249,241,.8)'\n  },\n  weilan: {\n    title: '蔚蓝',\n    color: 'rgb(22,22,2)',\n    bgColor: 'rgba(112,243,255,.9)'\n  },\n  zise: {\n    title: '紫色',\n    color: 'rgb(233, 241, 246)',\n    bgColor: 'rgba(141,75,187,.8)'\n  },\n  fense: {\n    title: '粉色',\n    color: 'rgb(22,22,2)',\n    bgColor: 'rgba(255,179,167,.8)'\n  },\n  yanzhi: {\n    title: '胭脂色',\n    color: 'rgb(233, 241, 246)',\n    bgColor: 'rgba(157,41,51,.8)'\n  },\n  tong: {\n    title: '彤色',\n    color: 'rgb(233, 241, 246)',\n    bgColor: 'rgba(243,83,54,.8)'\n  },\n  yanhong: {\n    title: '殷红',\n    color: 'rgb(233, 241, 246)',\n    bgColor: 'rgba(190,0,47,.8)'\n  }\n};\nconst getRandomTheme = () => {\n  const keys = Object.keys(themes);\n  let tmpKey = keys[Math.floor(Math.random() * keys.length)];\n  return tmpKey;\n};\n\nconst animateFuns = {\n  linear: {\n    title: '匀速'\n  },\n  ease: {\n    title: '慢-快-慢'\n  },\n  'ease-out': {\n    title: '快-慢'\n  },\n  'ease-in': {\n    title: '慢-快'\n  },\n  'cubic-bezier(0.2,0.4,0.8,2)': {\n    title: 'cubic-bezier'\n  },\n  'steps(10, end)': {\n    title: '步进'\n  }\n};\nconst getRandomAniFun = () => {\n  const keys = Object.keys(animateFuns);\n  let tmpKey = keys[Math.floor(Math.random() * keys.length)];\n  return tmpKey;\n};\nconst getRandomHead = () => {\n  return heads[Math.floor(Math.random() * heads.length)].path;\n};\nexport { getRandomTheme, themes, animateFuns, getRandomAniFun, heads, getRandomHead };\n","import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\n// import { Link } from 'react-router-dom';\nimport BulletScreen from 'rc-bullets';\nimport {\n  Button,\n  InputLabel,\n  TextField,\n  Select,\n  MenuItem,\n  Popper,\n  IconButton,\n  Paper,\n  Grid\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Settings } from '@material-ui/icons';\nimport BulletsScreen from './Screen';\nimport {\n  getRandomTheme,\n  themes,\n  animateFuns,\n  getRandomAniFun,\n  heads,\n  getRandomHead\n} from '../helper';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n    marginBottom: theme.spacing(2)\n  }\n}));\nconst StyledWrapper = styled.section`\n  .opts {\n    z-index: 999;\n    position: fixed;\n    width: 100%;\n    bottom: 0;\n    background: rgba(2, 2, 2, 0.2);\n    padding: 1rem 0;\n    .demo {\n      text-transform: uppercase;\n      padding: 4px 8px;\n      font-size: 1.5rem;\n      font-weight: 800;\n      position: absolute;\n      top: 5px;\n      right: 5px;\n    }\n  }\n`;\nconst StyledAvator = styled.img`\n  width: 1.4rem;\n  height: 1.4rem;\n  border-radius: 50%;\n  border: 1px solid #fff;\n`;\nexport default function Dashboard() {\n  const [currScreen, setCurrScreen] = useState(null);\n  const [bullet, setBullet] = useState('');\n  const [theme, setTheme] = useState('random');\n  const [animateFun, setAnimateFun] = useState('random');\n  const [duration, setDuration] = useState(20);\n  const [img, setImg] = useState('random');\n  const [paramsOpen, setParamsOpen] = useState(false);\n  const popperAnchorEl = useRef(null);\n  const classes = useStyles();\n  const togglePopper = () => {\n    setParamsOpen(prev => !prev);\n  };\n  useEffect(() => {\n    let tmp = new BulletScreen('.screen');\n    setCurrScreen(tmp);\n  }, []);\n  const handleInput = ({ target: { value } }) => {\n    console.log(value);\n\n    setBullet(value);\n  };\n  const handleSend = () => {\n    console.log('current bullet', bullet);\n\n    if (bullet) {\n      console.log('start send');\n\n      let currAnimateKey = animateFun === 'random' ? getRandomAniFun() : animateFun;\n      let currThemeKey = theme === 'random' ? getRandomTheme() : theme;\n      let currImg = img === 'random' ? getRandomHead() : img;\n      let { color, bgColor } = themes[currThemeKey];\n      let obj = {\n        animateTimeFun: currAnimateKey,\n        txt: bullet,\n        duration,\n        img: currImg,\n        color,\n        bgColor,\n        ts: new Date().getTime()\n      };\n      console.log({ obj });\n\n      const { txt, img: newImg, ...opts } = obj;\n      // const newValue = img ? { msg: txt, img: newImg } : txt;\n      currScreen.push({ msg: txt, img: newImg }, { ...opts });\n      // send by localStorage\n      let newV = JSON.stringify(obj);\n      console.log({ newV });\n\n      localStorage.setItem('BULLET', newV);\n      setBullet('');\n    }\n  };\n  const handleImgSelect = ({ target: { value } }) => {\n    console.log({ value });\n    setImg(value);\n  };\n  const handleThemeSelect = ({ target: { value } }) => {\n    console.log({ value });\n\n    setTheme(value);\n  };\n  const handleAnimateFunSelect = ({ target: { value } }) => {\n    console.log({ value });\n\n    setAnimateFun(value);\n  };\n\n  const handleDurChange = ({ target: { value } }) => {\n    console.log({ value });\n    setDuration(value);\n  };\n\n  return (\n    <StyledWrapper>\n      <BulletsScreen screen={currScreen} />\n      {/* <Link className=\"demo\" target=\"_blank\" to=\"/preview\">\n        preview\n      </Link> */}\n      <div className=\"opts\">\n        <Popper anchorEl={popperAnchorEl.current} open={paramsOpen} placement=\"top-start\">\n          <Paper className={classes.root}>\n            <Grid direction=\"column\" container spacing={1}>\n              <Grid item>\n                <InputLabel shrink id=\"img-label\">\n                  头像\n                </InputLabel>\n                <Select labelId=\"img-label\" value={img} onChange={handleImgSelect}>\n                  <MenuItem value=\"random\">\n                    <em>随机</em>\n                  </MenuItem>\n                  {heads.map(head => {\n                    const { title, path } = head;\n                    return (\n                      <MenuItem key={path} value={path}>\n                        <StyledAvator src={path} alt={title} />\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </Grid>\n              <Grid item>\n                <InputLabel shrink id=\"theme-label\">\n                  主题色\n                </InputLabel>\n\n                <Select labelId=\"theme-label\" value={theme} onChange={handleThemeSelect}>\n                  <MenuItem value=\"random\">\n                    <em>随机</em>\n                  </MenuItem>\n                  {Object.keys(themes).map(key => {\n                    return (\n                      <MenuItem key={key} value={key}>\n                        <span\n                          style={{\n                            width: '100%',\n                            padding: '.2rem',\n                            fontSize: '.6rem',\n                            color: themes[key].color,\n                            background: themes[key].bgColor\n                          }}\n                          title={themes[key].title}\n                        >\n                          {themes[key].title}\n                        </span>\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </Grid>\n              <Grid item>\n                <InputLabel shrink id=\"animate-fun-label\">\n                  运动函数\n                </InputLabel>\n\n                <Select labelId=\"animate-fun\" value={animateFun} onChange={handleAnimateFunSelect}>\n                  <MenuItem value=\"random\">\n                    <em>随机</em>\n                  </MenuItem>\n                  {Object.keys(animateFuns).map(key => {\n                    return (\n                      <MenuItem key={key} value={key}>\n                        {animateFuns[key].title}\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </Grid>\n              <Grid item>\n                <TextField\n                  label=\"时长/秒\"\n                  type=\"number\"\n                  value={duration}\n                  onChange={handleDurChange}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n        </Popper>\n        <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\n          <Grid item>\n            <IconButton ref={popperAnchorEl} onClick={togglePopper}>\n              <Settings />\n            </IconButton>\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              value={bullet}\n              label=\"弹幕内容\"\n              fullWidth\n              multiline\n              placeholder=\"请输入弹幕内容\"\n              variant=\"outlined\"\n              onChange={handleInput}\n            />\n          </Grid>\n          <Grid item>\n            <Button variant=\"contained\" color=\"primary\" className=\"sendBtn\" onClick={handleSend}>\n              发送弹幕\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n    </StyledWrapper>\n  );\n}\n","import React from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport DemoPage from './containers/Screen';\nimport DashboardPage from './containers/Dashboard';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nconst App = () => {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          primary: {\n            main: '#177cb0'\n          },\n          secondary: { main: '#4c8dae' },\n          error: {\n            main: '#dc3023'\n          },\n          type: prefersDarkMode ? 'dark' : 'light'\n        }\n      }),\n    [prefersDarkMode]\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path={`/`} exact component={DashboardPage} />\n          <Route path={`/preview`} component={DemoPage} />\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n};\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n  *{\n    box-sizing:border-box;\n    user-select:none;\n    outline:none;\n    -webkit-text-size-adjust: none;\n    -webkit-tap-highlight-color: rgba(0,0,0,0);\n  }\n  html{\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  body{\n    -webkit-overflow-scrolling: touch;\n    overflow:scroll;\n    margin:0 auto;\n    min-height:100vh;\n    position: relative;\n  }\n  #root{\n    min-height:100vh;\n    background-image:linear-gradient(135deg, rgb(96, 108, 136) 0%, rgb(63, 76, 107) 100%);\n  }\n\n  @media screen and (min-width: 320px){\n      html {\n          font-size: 12px;\n      }\n  }\n  @media screen and (min-width: 375px){\n      html {\n          font-size: 14px;\n      }\n  }\n  @media screen and (min-width: 480px){\n      html {\n          font-size: 20px;\n      }\n  }\n  @media screen and (min-width: 768px){\n      html {\n          font-size: 24px;\n      }\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport GlobalStyle from './Global.style';\n\nReactDOM.render(\n  <>\n    <GlobalStyle />\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}